#!/usr/bin/env python3

# Rest of the code...

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = 2
    y = 2
    d = 1
    f = lambda x: (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize_rsa(n):
    divisor = pollards_rho(n)
    if divisor == n:
        return None
    return divisor, n // divisor

def main():
    import sys

    if len(sys.argv) != 2:
        print("Usage: ./rsa <file>")
        sys.exit(1)

    with open(sys.argv[1], 'r') as file:
        num = int(file.readline().strip())

    p, q = factorize_rsa(num)
    print(f"{num}={p}*{q}")

if __name__ == "__main__":
    main()
